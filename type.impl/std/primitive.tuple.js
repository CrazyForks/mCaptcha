(function() {var type_impls = {
"mcaptcha":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3C(A,+B)%3E-for-(ExtendA,+ExtendB)\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.56.0\">1.56.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.2/src/core/iter/traits/collect.rs.html#398-401\">source</a></span><a href=\"#impl-Extend%3C(A,+B)%3E-for-(ExtendA,+ExtendB)\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, B, ExtendA, ExtendB&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B)</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(ExtendA, ExtendB)</a><div class=\"where\">where\n    ExtendA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    ExtendB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.2/src/core/iter/traits/collect.rs.html#423\">source</a><a href=\"#method.extend\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;T&gt;(&amp;mut self, into_iter: T)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B)</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Allows to <code>extend</code> a tuple of collections that also implement <code>Extend</code>.</p>\n<p>See also: <a href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/iterator/trait.Iterator.html#method.unzip\" title=\"method core::iter::traits::iterator::Iterator::unzip\"><code>Iterator::unzip</code></a></p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>tuple = (<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>], <span class=\"macro\">vec!</span>[<span class=\"number\">1</span>]);\ntuple.extend([(<span class=\"number\">2</span>, <span class=\"number\">3</span>), (<span class=\"number\">4</span>, <span class=\"number\">5</span>), (<span class=\"number\">6</span>, <span class=\"number\">7</span>)]);\n<span class=\"macro\">assert_eq!</span>(tuple.<span class=\"number\">0</span>, [<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>]);\n<span class=\"macro\">assert_eq!</span>(tuple.<span class=\"number\">1</span>, [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>]);\n\n<span class=\"comment\">// also allows for arbitrarily nested tuples as elements\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>nested_tuple = (<span class=\"macro\">vec!</span>[<span class=\"number\">1</span>], (<span class=\"macro\">vec!</span>[<span class=\"number\">2</span>], <span class=\"macro\">vec!</span>[<span class=\"number\">3</span>]));\nnested_tuple.extend([(<span class=\"number\">4</span>, (<span class=\"number\">5</span>, <span class=\"number\">6</span>)), (<span class=\"number\">7</span>, (<span class=\"number\">8</span>, <span class=\"number\">9</span>))]);\n\n<span class=\"kw\">let </span>(a, (b, c)) = nested_tuple;\n<span class=\"macro\">assert_eq!</span>(a, [<span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">7</span>]);\n<span class=\"macro\">assert_eq!</span>(b, [<span class=\"number\">2</span>, <span class=\"number\">5</span>, <span class=\"number\">8</span>]);\n<span class=\"macro\">assert_eq!</span>(c, [<span class=\"number\">3</span>, <span class=\"number\">6</span>, <span class=\"number\">9</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.2/src/core/iter/traits/collect.rs.html#446\">source</a><a href=\"#method.extend_one\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B)</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.2/src/core/iter/traits/collect.rs.html#451\">source</a><a href=\"#method.extend_reserve\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<(A, B)>","mcaptcha::static_assets::static_files::assets::Img"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+2%5D%3E-for-(T,+T)\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0\">1.71.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.2/src/core/tuple.rs.html#221\">source</a></span><a href=\"#impl-From%3C%5BT;+2%5D%3E-for-(T,+T)\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">[T; 2]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(T, T)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.2/src/core/tuple.rs.html#221\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(array: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">[T; 2]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(T, T)</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[T; 2]>","mcaptcha::static_assets::static_files::assets::Img"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HttpServiceFactory-for-(A,+B)\" class=\"impl\"><a href=\"#impl-HttpServiceFactory-for-(A,+B)\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, B&gt; HttpServiceFactory for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    A: HttpServiceFactory,\n    B: HttpServiceFactory,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.register\" class=\"method trait-impl\"><a href=\"#method.register\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">register</a>(self, config: &amp;mut AppService)</h4></section></div></details>","HttpServiceFactory","mcaptcha::static_assets::static_files::assets::Img"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromRequest-for-(A,+B)\" class=\"impl\"><a href=\"#impl-FromRequest-for-(A,+B)\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, B&gt; FromRequest for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    A: FromRequest + 'static,\n    B: FromRequest + 'static,</div></h3></section></summary><div class=\"docblock\"><p>FromRequest implementation for tuple</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = Error</h4></section></summary><div class='docblock'>The associated error which can be returned.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = TupleFromRequest2&lt;A, B&gt;</h4></section></summary><div class='docblock'>Future that resolves to a <code>Self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_request\" class=\"method trait-impl\"><a href=\"#method.from_request\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">from_request</a>(\n    req: &amp;HttpRequest,\n    payload: &amp;mut Payload\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B)</a> as FromRequest&gt;::Future</h4></section></summary><div class='docblock'>Create a <code>Self</code> from request parts asynchronously.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extract\" class=\"method trait-impl\"><a href=\"#method.extract\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">extract</a>(req: &amp;HttpRequest) -&gt; Self::Future</h4></section></summary><div class='docblock'>Create a <code>Self</code> from request head asynchronously. <a>Read more</a></div></details></div></details>","FromRequest","mcaptcha::static_assets::static_files::assets::Img"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(A,+B,+C,+D)%3E-for-Func\" class=\"impl\"><a href=\"#impl-Handler%3C(A,+B,+C,+D)%3E-for-Func\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;Func, Fut, A, B, C, D&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B, C, D)</a>&gt; for Func<div class=\"where\">where\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = &lt;Fut as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.2/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a></h4></section><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = Fut</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(&amp;self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B, C, D)</a>) -&gt; &lt;Func as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B, C, D)</a>&gt;&gt;::Future</h4></section></div></details>","Handler<(A, B, C, D)>","mcaptcha::static_assets::static_files::assets::Img"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(A,)%3E-for-Func\" class=\"impl\"><a href=\"#impl-Handler%3C(A,)%3E-for-Func\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;Func, Fut, A&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A,)</a>&gt; for Func<div class=\"where\">where\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = &lt;Fut as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.2/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a></h4></section><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = Fut</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(&amp;self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A,)</a>) -&gt; &lt;Func as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A,)</a>&gt;&gt;::Future</h4></section></div></details>","Handler<(A,)>","mcaptcha::static_assets::static_files::assets::Img"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J,+K)%3E-for-Func\" class=\"impl\"><a href=\"#impl-Handler%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J,+K)%3E-for-Func\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;Func, Fut, A, B, C, D, E, F, G, H, I, J, K&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K)</a>&gt; for Func<div class=\"where\">where\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D, E, F, G, H, I, J, K) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = &lt;Fut as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.2/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a></h4></section><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = Fut</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    &amp;self,\n    _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K)</a>\n) -&gt; &lt;Func as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K)</a>&gt;&gt;::Future</h4></section></div></details>","Handler<(A, B, C, D, E, F, G, H, I, J, K)>","mcaptcha::static_assets::static_files::assets::Img"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J)%3E-for-Func\" class=\"impl\"><a href=\"#impl-Handler%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J)%3E-for-Func\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;Func, Fut, A, B, C, D, E, F, G, H, I, J&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J)</a>&gt; for Func<div class=\"where\">where\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D, E, F, G, H, I, J) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = &lt;Fut as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.2/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a></h4></section><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = Fut</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    &amp;self,\n    _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J)</a>\n) -&gt; &lt;Func as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J)</a>&gt;&gt;::Future</h4></section></div></details>","Handler<(A, B, C, D, E, F, G, H, I, J)>","mcaptcha::static_assets::static_files::assets::Img"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(A,+B)%3E-for-Func\" class=\"impl\"><a href=\"#impl-Handler%3C(A,+B)%3E-for-Func\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;Func, Fut, A, B&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B)</a>&gt; for Func<div class=\"where\">where\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = &lt;Fut as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.2/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a></h4></section><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = Fut</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(&amp;self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B)</a>) -&gt; &lt;Func as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B)</a>&gt;&gt;::Future</h4></section></div></details>","Handler<(A, B)>","mcaptcha::static_assets::static_files::assets::Img"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(A,+B,+C,+D,+E,+F,+G)%3E-for-Func\" class=\"impl\"><a href=\"#impl-Handler%3C(A,+B,+C,+D,+E,+F,+G)%3E-for-Func\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;Func, Fut, A, B, C, D, E, F, G&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>&gt; for Func<div class=\"where\">where\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D, E, F, G) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = &lt;Fut as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.2/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a></h4></section><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = Fut</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    &amp;self,\n    _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>\n) -&gt; &lt;Func as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>&gt;&gt;::Future</h4></section></div></details>","Handler<(A, B, C, D, E, F, G)>","mcaptcha::static_assets::static_files::assets::Img"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(A,+B,+C)%3E-for-Func\" class=\"impl\"><a href=\"#impl-Handler%3C(A,+B,+C)%3E-for-Func\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;Func, Fut, A, B, C&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B, C)</a>&gt; for Func<div class=\"where\">where\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = &lt;Fut as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.2/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a></h4></section><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = Fut</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(&amp;self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B, C)</a>) -&gt; &lt;Func as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B, C)</a>&gt;&gt;::Future</h4></section></div></details>","Handler<(A, B, C)>","mcaptcha::static_assets::static_files::assets::Img"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(A,+B,+C,+D,+E,+F,+G,+H,+I)%3E-for-Func\" class=\"impl\"><a href=\"#impl-Handler%3C(A,+B,+C,+D,+E,+F,+G,+H,+I)%3E-for-Func\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;Func, Fut, A, B, C, D, E, F, G, H, I&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I)</a>&gt; for Func<div class=\"where\">where\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D, E, F, G, H, I) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = &lt;Fut as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.2/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a></h4></section><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = Fut</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    &amp;self,\n    _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I)</a>\n) -&gt; &lt;Func as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I)</a>&gt;&gt;::Future</h4></section></div></details>","Handler<(A, B, C, D, E, F, G, H, I)>","mcaptcha::static_assets::static_files::assets::Img"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(A,+B,+C,+D,+E,+F,+G,+H)%3E-for-Func\" class=\"impl\"><a href=\"#impl-Handler%3C(A,+B,+C,+D,+E,+F,+G,+H)%3E-for-Func\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;Func, Fut, A, B, C, D, E, F, G, H&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H)</a>&gt; for Func<div class=\"where\">where\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D, E, F, G, H) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = &lt;Fut as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.2/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a></h4></section><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = Fut</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    &amp;self,\n    _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H)</a>\n) -&gt; &lt;Func as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H)</a>&gt;&gt;::Future</h4></section></div></details>","Handler<(A, B, C, D, E, F, G, H)>","mcaptcha::static_assets::static_files::assets::Img"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(A,+B,+C,+D,+E)%3E-for-Func\" class=\"impl\"><a href=\"#impl-Handler%3C(A,+B,+C,+D,+E)%3E-for-Func\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;Func, Fut, A, B, C, D, E&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B, C, D, E)</a>&gt; for Func<div class=\"where\">where\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D, E) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = &lt;Fut as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.2/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a></h4></section><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = Fut</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(&amp;self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B, C, D, E)</a>) -&gt; &lt;Func as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B, C, D, E)</a>&gt;&gt;::Future</h4></section></div></details>","Handler<(A, B, C, D, E)>","mcaptcha::static_assets::static_files::assets::Img"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(A,+B,+C,+D,+E,+F)%3E-for-Func\" class=\"impl\"><a href=\"#impl-Handler%3C(A,+B,+C,+D,+E,+F)%3E-for-Func\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;Func, Fut, A, B, C, D, E, F&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B, C, D, E, F)</a>&gt; for Func<div class=\"where\">where\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D, E, F) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = &lt;Fut as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.2/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a></h4></section><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = Fut</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    &amp;self,\n    _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B, C, D, E, F)</a>\n) -&gt; &lt;Func as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B, C, D, E, F)</a>&gt;&gt;::Future</h4></section></div></details>","Handler<(A, B, C, D, E, F)>","mcaptcha::static_assets::static_files::assets::Img"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J,+K,+L)%3E-for-Func\" class=\"impl\"><a href=\"#impl-Handler%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J,+K,+L)%3E-for-Func\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;Func, Fut, A, B, C, D, E, F, G, H, I, J, K, L&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L)</a>&gt; for Func<div class=\"where\">where\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D, E, F, G, H, I, J, K, L) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = &lt;Fut as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.2/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a></h4></section><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = Fut</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    &amp;self,\n    _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L)</a>\n) -&gt; &lt;Func as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L)</a>&gt;&gt;::Future</h4></section></div></details>","Handler<(A, B, C, D, E, F, G, H, I, J, K, L)>","mcaptcha::static_assets::static_files::assets::Img"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryIntoHeaderPair-for-(%26str,+V)\" class=\"impl\"><a href=\"#impl-TryIntoHeaderPair-for-(%26str,+V)\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;V&gt; TryIntoHeaderPair for (&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.str.html\">str</a>, V)<div class=\"where\">where\n    V: TryIntoHeaderValue,\n    &lt;V as TryIntoHeaderValue&gt;::Error: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.9/http/header/value/struct.InvalidHeaderValue.html\" title=\"struct http::header::value::InvalidHeaderValue\">InvalidHeaderValue</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = InvalidHeaderPart</h4></section><section id=\"method.try_into_pair\" class=\"method trait-impl\"><a href=\"#method.try_into_pair\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">try_into_pair</a>(\n    self\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"struct\" href=\"https://docs.rs/http/0.2.9/http/header/name/struct.HeaderName.html\" title=\"struct http::header::name::HeaderName\">HeaderName</a>, <a class=\"struct\" href=\"https://docs.rs/http/0.2.9/http/header/value/struct.HeaderValue.html\" title=\"struct http::header::value::HeaderValue\">HeaderValue</a>), &lt;(&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.str.html\">str</a>, V) as TryIntoHeaderPair&gt;::Error&gt;</h4></section></div></details>","TryIntoHeaderPair","mcaptcha::static_assets::static_files::assets::Img"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-(T0,+T1)\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.147/src/serde/de/impls.rs.html#1332-1349\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-(T0,+T1)\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'de, T0, T1&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.147/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(T0, T1)</a><div class=\"where\">where\n    T0: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.147/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    T1: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.147/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.147/src/serde/de/impls.rs.html#1332-1349\">source</a><a href=\"#method.deserialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.147/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(T0, T1)</a>, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.147/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.147/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.147/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.147/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","mcaptcha::static_assets::static_files::assets::Img"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-(T0,+T1)\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.147/src/serde/ser/impls.rs.html#329-346\">source</a><a href=\"#impl-Serialize-for-(T0,+T1)\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T0, T1&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.147/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(T0, T1)</a><div class=\"where\">where\n    T0: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.147/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    T1: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.147/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.147/src/serde/ser/impls.rs.html#329-346\">source</a><a href=\"#method.serialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.147/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.147/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.147/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.147/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.147/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.147/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.147/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","mcaptcha::static_assets::static_files::assets::Img"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Parser%3CInput%3E-for-(A,+B)\" class=\"impl\"><a href=\"#impl-Parser%3CInput%3E-for-(A,+B)\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;Input, A, B&gt; Parser&lt;Input&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    Input: Stream,\n    &lt;Input as StreamOnce&gt;::Error: ParseError&lt;&lt;Input as StreamOnce&gt;::Token, &lt;Input as StreamOnce&gt;::Range, &lt;Input as StreamOnce&gt;::Position&gt;,\n    A: Parser&lt;Input&gt;,\n    B: Parser&lt;Input&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = (&lt;A as Parser&lt;Input&gt;&gt;::Output, &lt;B as Parser&lt;Input&gt;&gt;::Output)</h4></section></summary><div class='docblock'>The type which is returned if the parser is successful.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.PartialState\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PartialState\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">PartialState</a> = PartialState2&lt;SequenceState&lt;&lt;A as Parser&lt;Input&gt;&gt;::Output, &lt;A as Parser&lt;Input&gt;&gt;::PartialState&gt;, SequenceState&lt;&lt;B as Parser&lt;Input&gt;&gt;::Output, &lt;B as Parser&lt;Input&gt;&gt;::PartialState&gt;&gt;</h4></section></summary><div class='docblock'>Determines the state necessary to resume parsing after more input is supplied. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_error\" class=\"method trait-impl\"><a href=\"#method.add_error\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">add_error</a>(&amp;mut self, errors: &amp;mut Tracked&lt;&lt;Input as StreamOnce&gt;::Error&gt;)</h4></section></summary><div class='docblock'>Adds the first error that would normally be returned by this parser if it failed with an\n<code>PeekErr</code> result. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse\" class=\"method trait-impl\"><a href=\"#method.parse\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">parse</a>(\n    &amp;mut self,\n    input: Input\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(Self::Output, Input), &lt;Input as StreamOnce&gt;::Error&gt;</h4></section></summary><div class='docblock'>Entry point of the parser. Takes some input and tries to parse it. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_with_state\" class=\"method trait-impl\"><a href=\"#method.parse_with_state\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">parse_with_state</a>(\n    &amp;mut self,\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;mut Input</a>,\n    state: &amp;mut Self::PartialState\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self::Output, &lt;Input as StreamOnce&gt;::Error&gt;</h4></section></summary><div class='docblock'>Entry point of the parser when using partial parsing.\nTakes some input and tries to parse it. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_stream\" class=\"method trait-impl\"><a href=\"#method.parse_stream\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">parse_stream</a>(\n    &amp;mut self,\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;mut Input</a>\n) -&gt; ParseResult&lt;Self::Output, &lt;Input as StreamOnce&gt;::Error&gt;</h4></section></summary><div class='docblock'>Parses using the stream <code>input</code> by calling <a href=\"super::stream::StreamOnce::uncons\"><code>Stream::uncons</code></a> one or more times. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_lazy\" class=\"method trait-impl\"><a href=\"#method.parse_lazy\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">parse_lazy</a>(\n    &amp;mut self,\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;mut Input</a>\n) -&gt; ParseResult&lt;Self::Output, &lt;Input as StreamOnce&gt;::Error&gt;</h4></section></summary><div class='docblock'>Parses using the stream <code>input</code> by calling <a href=\"super::stream::StreamOnce::uncons\"><code>Stream::uncons</code></a> one or more times. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_stream_partial\" class=\"method trait-impl\"><a href=\"#method.parse_stream_partial\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">parse_stream_partial</a>(\n    &amp;mut self,\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;mut Input</a>,\n    state: &amp;mut Self::PartialState\n) -&gt; ParseResult&lt;Self::Output, &lt;Input as StreamOnce&gt;::Error&gt;</h4></section></summary><div class='docblock'>Like <code>parse_stream</code> but supports partial parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.by_ref\" class=\"method trait-impl\"><a href=\"#method.by_ref\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">by_ref</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;mut Self</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Borrows a parser instead of consuming it. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with\" class=\"method trait-impl\"><a href=\"#method.with\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">with</a>&lt;P2&gt;(self, p: P2) -&gt; With&lt;Self, P2&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P2: Parser&lt;Input&gt;,</div></h4></section></summary><div class='docblock'>Discards the value of the <code>self</code> parser and returns the value of <code>p</code>.\nFails if any of the parsers fails. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a href=\"#method.skip\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">skip</a>&lt;P2&gt;(self, p: P2) -&gt; Skip&lt;Self, P2&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P2: Parser&lt;Input&gt;,</div></h4></section></summary><div class='docblock'>Discards the value of the <code>p</code> parser and returns the value of <code>self</code>.\nFails if any of the parsers fails. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.and\" class=\"method trait-impl\"><a href=\"#method.and\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">and</a>&lt;P2&gt;(self, p: P2) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(Self, P2)</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P2: Parser&lt;Input&gt;,</div></h4></section></summary><div class='docblock'>Parses with <code>self</code> followed by <code>p</code>.\nSucceeds if both parsers succeed, otherwise fails.\nReturns a tuple with both values on success. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.or\" class=\"method trait-impl\"><a href=\"#method.or\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">or</a>&lt;P2&gt;(self, p: P2) -&gt; Or&lt;Self, P2&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P2: Parser&lt;Input, Output = Self::Output&gt;,</div></h4></section></summary><div class='docblock'>Returns a parser which attempts to parse using <code>self</code>. If <code>self</code> fails without committing\nit tries to consume the same input using <code>p</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.then\" class=\"method trait-impl\"><a href=\"#method.then\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">then</a>&lt;N, F&gt;(self, f: F) -&gt; Then&lt;Self, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::Output) -&gt; N,\n    N: Parser&lt;Input&gt;,</div></h4></section></summary><div class='docblock'>Parses using <code>self</code> and then passes the value to <code>f</code> which returns a parser used to parse\nthe rest of the input. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.then_partial\" class=\"method trait-impl\"><a href=\"#method.then_partial\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">then_partial</a>&lt;N, F&gt;(self, f: F) -&gt; ThenPartial&lt;Self, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;mut Self::Output) -&gt; N,\n    N: Parser&lt;Input&gt;,</div></h4></section></summary><div class='docblock'>Variant of <a href=\"Parser::then\"><code>then</code></a> which parses using <code>self</code> and then passes the value to <code>f</code> as a <code>&amp;mut</code> reference. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.then_ref\" class=\"method trait-impl\"><a href=\"#method.then_ref\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">then_ref</a>&lt;N, F&gt;(self, f: F) -&gt; ThenRef&lt;Self, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::Output) -&gt; N,\n    N: Parser&lt;Input&gt;,</div></h4></section></summary><div class='docblock'>Parses using <code>self</code> and then passes a reference to the value to <code>f</code> which returns a parser\nused to parse the rest of the input. The value is then combined with the output of <code>f</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method trait-impl\"><a href=\"#method.map\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">map</a>&lt;F, B&gt;(self, f: F) -&gt; Map&lt;Self, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::Output) -&gt; B,</div></h4></section></summary><div class='docblock'>Uses <code>f</code> to map over the parsed value. <a>Read more</a></div></details><section id=\"method.map_input\" class=\"method trait-impl\"><a href=\"#method.map_input\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">map_input</a>&lt;F, B&gt;(self, f: F) -&gt; MapInput&lt;Self, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::Output, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;mut Input</a>) -&gt; B,</div></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.flat_map\" class=\"method trait-impl\"><a href=\"#method.flat_map\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">flat_map</a>&lt;F, B&gt;(self, f: F) -&gt; FlatMap&lt;Self, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::Output) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;B, &lt;Input as StreamOnce&gt;::Error&gt;,</div></h4></section></summary><div class='docblock'>Uses <code>f</code> to map over the output of <code>self</code>. If <code>f</code> returns an error the parser fails. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.message\" class=\"method trait-impl\"><a href=\"#method.message\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">message</a>&lt;S&gt;(self, msg: S) -&gt; Message&lt;Self, S&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    S: for&lt;'s&gt; ErrorInfo&lt;'s, &lt;Input as StreamOnce&gt;::Token, &lt;Input as StreamOnce&gt;::Range&gt;,</div></h4></section></summary><div class='docblock'>Parses with <code>self</code> and if it fails, adds the message <code>msg</code> to the error. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.expected\" class=\"method trait-impl\"><a href=\"#method.expected\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">expected</a>&lt;S&gt;(self, msg: S) -&gt; Expected&lt;Self, S&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    S: for&lt;'s&gt; ErrorInfo&lt;'s, &lt;Input as StreamOnce&gt;::Token, &lt;Input as StreamOnce&gt;::Range&gt;,</div></h4></section></summary><div class='docblock'>Parses with <code>self</code> and if it fails without consuming any input any expected errors are\nreplaced by <code>msg</code>. <code>msg</code> is then used in error messages as โExpected <code>msg</code>โ. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.silent\" class=\"method trait-impl\"><a href=\"#method.silent\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">silent</a>(self) -&gt; Silent&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Parses with <code>self</code>, if it fails without consuming any input any expected errors that would\notherwise be emitted by <code>self</code> are suppressed. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.and_then\" class=\"method trait-impl\"><a href=\"#method.and_then\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">and_then</a>&lt;F, O, E&gt;(self, f: F) -&gt; AndThen&lt;Self, F&gt;<div class=\"where\">where\n    Self: Parser&lt;Input&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::Output) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;O, E&gt;,\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;&lt;Input as StreamOnce&gt;::Error as ParseError&lt;&lt;Input as StreamOnce&gt;::Token, &lt;Input as StreamOnce&gt;::Range, &lt;Input as StreamOnce&gt;::Position&gt;&gt;::StreamError&gt;,</div></h4></section></summary><div class='docblock'>Parses with <code>self</code> and applies <code>f</code> on the result if <code>self</code> parses successfully.\n<code>f</code> may optionally fail with an error which is automatically converted to a <code>ParseError</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method trait-impl\"><a href=\"#method.iter\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">iter</a>(\n    self,\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;mut Input</a>\n) -&gt; Iter&lt;'_, Input, Self, Self::PartialState, FirstMode&gt;<div class=\"where\">where\n    Self: Parser&lt;Input&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator from a parser and a state. Can be used as an alternative to <a href=\"repeat::many\"><code>many</code></a>\nwhen collecting directly into a <code>Extend</code> type is not desirable. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_iter\" class=\"method trait-impl\"><a href=\"#method.partial_iter\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_iter</a>&lt;M, 'a, 's&gt;(\n    self,\n    mode: M,\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;'a mut Input</a>,\n    partial_state: &amp;'s mut Self::PartialState\n) -&gt; Iter&lt;'a, Input, Self, &amp;'s mut Self::PartialState, M&gt;<div class=\"where\">where\n    Self: Parser&lt;Input&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    M: ParseMode,</div></h4></section></summary><div class='docblock'>Creates an iterator from a parser and a state. Can be used as an alternative to <a href=\"repeat::many\"><code>many</code></a>\nwhen collecting directly into a <code>Extend</code> type is not desirable. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.boxed\" class=\"method trait-impl\"><a href=\"#method.boxed\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">boxed</a>&lt;'a&gt;(\n    self\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn Parser&lt;Input, Output = Self::Output, PartialState = Self::PartialState&gt; + 'a&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + 'a,</div></h4></section></summary><div class='docblock'>Turns the parser into a trait object by putting it in a <code>Box</code>. Can be used to easily\nreturn parsers from functions without naming the type. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.left\" class=\"method trait-impl\"><a href=\"#method.left\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">left</a>&lt;R&gt;(self) -&gt; Either&lt;Self, R&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    R: Parser&lt;Input, Output = Self::Output&gt;,</div></h4></section></summary><div class='docblock'>Wraps the parser into the <a href=\"combinator::Either\"><code>Either</code></a> enum which allows combinators such as <a href=\"Parser::then\"><code>then</code></a> to return\nmultiple different parser types (merging them to one) <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.right\" class=\"method trait-impl\"><a href=\"#method.right\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">right</a>&lt;L&gt;(self) -&gt; Either&lt;L, Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    L: Parser&lt;Input, Output = Self::Output&gt;,</div></h4></section></summary><div class='docblock'>Wraps the parser into the <a href=\"combinator::Either\"><code>Either</code></a> enum which allows combinators such as <a href=\"Parser::then\"><code>then</code></a> to return\nmultiple different parser types (merging them to one) <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.spanned\" class=\"method trait-impl\"><a href=\"#method.spanned\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">spanned</a>(self) -&gt; Spanned&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Marks errors produced inside the <code>self</code> parser with the span from the start of the parse to\nthe end of it. <a>Read more</a></div></details></div></details>","Parser<Input>","mcaptcha::static_assets::static_files::assets::Img"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ChoiceParser%3CInput%3E-for-(Y,+Z)\" class=\"impl\"><a href=\"#impl-ChoiceParser%3CInput%3E-for-(Y,+Z)\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;Input, Output, Y, Z&gt; ChoiceParser&lt;Input&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(Y, Z)</a><div class=\"where\">where\n    Input: Stream,\n    Y: Parser&lt;Input, Output = Output&gt;,\n    Z: Parser&lt;Input, Output = Output&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = Output</h4></section><section id=\"associatedtype.PartialState\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PartialState\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">PartialState</a> = Y&lt;&lt;Y as Parser&lt;Input&gt;&gt;::PartialState, &lt;Z as Parser&lt;Input&gt;&gt;::PartialState&gt;</h4></section><section id=\"method.parse_partial\" class=\"method trait-impl\"><a href=\"#method.parse_partial\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">parse_partial</a>(\n    &amp;mut self,\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;mut Input</a>,\n    state: &amp;mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(Y, Z)</a> as ChoiceParser&lt;Input&gt;&gt;::PartialState\n) -&gt; ParseResult&lt;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(Y, Z)</a> as ChoiceParser&lt;Input&gt;&gt;::Output, &lt;Input as StreamOnce&gt;::Error&gt;</h4></section><section id=\"method.parse_first\" class=\"method trait-impl\"><a href=\"#method.parse_first\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">parse_first</a>(\n    &amp;mut self,\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;mut Input</a>,\n    state: &amp;mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(Y, Z)</a> as ChoiceParser&lt;Input&gt;&gt;::PartialState\n) -&gt; ParseResult&lt;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(Y, Z)</a> as ChoiceParser&lt;Input&gt;&gt;::Output, &lt;Input as StreamOnce&gt;::Error&gt;</h4></section><section id=\"method.parse_mode_choice\" class=\"method trait-impl\"><a href=\"#method.parse_mode_choice\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">parse_mode_choice</a>&lt;Mode&gt;(\n    &amp;mut self,\n    mode: Mode,\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;mut Input</a>,\n    state: &amp;mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(Y, Z)</a> as ChoiceParser&lt;Input&gt;&gt;::PartialState\n) -&gt; ParseResult&lt;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(Y, Z)</a> as ChoiceParser&lt;Input&gt;&gt;::Output, &lt;Input as StreamOnce&gt;::Error&gt;<div class=\"where\">where\n    Mode: ParseMode,</div></h4></section><section id=\"method.add_error_choice\" class=\"method trait-impl\"><a href=\"#method.add_error_choice\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">add_error_choice</a>(\n    &amp;mut self,\n    error: &amp;mut Tracked&lt;&lt;Input as StreamOnce&gt;::Error&gt;\n)</h4></section></div></details>","ChoiceParser<Input>","mcaptcha::static_assets::static_files::assets::Img"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Tuple%3CInput,+(A,+B),+Error%3E-for-(FnA,+FnB)\" class=\"impl\"><a href=\"#impl-Tuple%3CInput,+(A,+B),+Error%3E-for-(FnA,+FnB)\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;Input, A, B, Error, FnA, FnB&gt; Tuple&lt;Input, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B)</a>, Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(FnA, FnB)</a><div class=\"where\">where\n    Input: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Error: ParseError&lt;Input&gt;,\n    FnA: Parser&lt;Input, A, Error&gt;,\n    FnB: Parser&lt;Input, B, Error&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse\" class=\"method trait-impl\"><a href=\"#method.parse\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">parse</a>(&amp;mut self, input: Input) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(Input, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B)</a>), Err&lt;Error&gt;&gt;</h4></section></summary><div class='docblock'>Parses the input and returns a tuple of results of each parser.</div></details></div></details>","Tuple<Input, (A, B), Error>","mcaptcha::static_assets::static_files::assets::Img"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Permutation%3CInput,+(A,+B),+Error%3E-for-(FnA,+FnB)\" class=\"impl\"><a href=\"#impl-Permutation%3CInput,+(A,+B),+Error%3E-for-(FnA,+FnB)\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;Input, A, B, Error, FnA, FnB&gt; Permutation&lt;Input, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B)</a>, Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(FnA, FnB)</a><div class=\"where\">where\n    Input: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Error: ParseError&lt;Input&gt;,\n    FnA: Parser&lt;Input, A, Error&gt;,\n    FnB: Parser&lt;Input, B, Error&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.permutation\" class=\"method trait-impl\"><a href=\"#method.permutation\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">permutation</a>(&amp;mut self, input: Input) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(Input, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B)</a>), Err&lt;Error&gt;&gt;</h4></section></summary><div class='docblock'>Tries to apply all parsers in the tuple in various orders until all of them succeed</div></details></div></details>","Permutation<Input, (A, B), Error>","mcaptcha::static_assets::static_files::assets::Img"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alt%3CInput,+Output,+Error%3E-for-(A,+B)\" class=\"impl\"><a href=\"#impl-Alt%3CInput,+Output,+Error%3E-for-(A,+B)\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;Input, Output, Error, A, B&gt; Alt&lt;Input, Output, Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    Input: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Error: ParseError&lt;Input&gt;,\n    A: Parser&lt;Input, Output, Error&gt;,\n    B: Parser&lt;Input, Output, Error&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.choice\" class=\"method trait-impl\"><a href=\"#method.choice\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">choice</a>(&amp;mut self, input: Input) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(Input, Output)</a>, Err&lt;Error&gt;&gt;</h4></section></summary><div class='docblock'>Tests each parser in the tuple and returns the result of the first one that succeeds</div></details></div></details>","Alt<Input, Output, Error>","mcaptcha::static_assets::static_files::assets::Img"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromRow%3C'r,+R%3E-for-(T1,+T2)\" class=\"impl\"><a href=\"#impl-FromRow%3C'r,+R%3E-for-(T1,+T2)\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'r, R, T1, T2&gt; FromRow&lt;'r, R&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(T1, T2)</a><div class=\"where\">where\n    R: Row,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.usize.html\">usize</a>: ColumnIndex&lt;R&gt;,\n    T1: Decode&lt;'r, &lt;R as Row&gt;::Database&gt; + Type&lt;&lt;R as Row&gt;::Database&gt;,\n    T2: Decode&lt;'r, &lt;R as Row&gt;::Database&gt; + Type&lt;&lt;R as Row&gt;::Database&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.from_row\" class=\"method trait-impl\"><a href=\"#method.from_row\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">from_row</a>(row: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;'r R</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(T1, T2)</a>, Error&gt;</h4></section></div></details>","FromRow<'r, R>","mcaptcha::static_assets::static_files::assets::Img"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#77\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#77\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)>","mcaptcha::static_assets::static_files::assets::Img"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#74\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B, C, D, E, F)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#74\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF)>","mcaptcha::static_assets::static_files::assets::Img"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#72\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B, C, D)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#72\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD)>","mcaptcha::static_assets::static_files::assets::Img"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#78\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#78\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)>","mcaptcha::static_assets::static_files::assets::Img"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#75\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#75\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG)>","mcaptcha::static_assets::static_files::assets::Img"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#71\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(FromA, FromB, FromC)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B, C)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#71\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(FromA, FromB, FromC)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC)>","mcaptcha::static_assets::static_files::assets::Img"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#76\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#76\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)>","mcaptcha::static_assets::static_files::assets::Img"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#73\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B, C, D, E)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#73\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE)>","mcaptcha::static_assets::static_files::assets::Img"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#70\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(FromA, FromB)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#70\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(FromA, FromB)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB)>","mcaptcha::static_assets::static_files::assets::Img"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#80\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK, L, FromL&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,\n    FromL: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;L&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#80\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)>","mcaptcha::static_assets::static_files::assets::Img"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#69\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;IT, A, FromA&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(FromA,)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A,)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#69\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(FromA,)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA,)>","mcaptcha::static_assets::static_files::assets::Img"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#79\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#79\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)>","mcaptcha::static_assets::static_files::assets::Img"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Bounded-for-(S,+T)\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/bounds.rs.html#116\">source</a><a href=\"#impl-Bounded-for-(S,+T)\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html\" title=\"trait num_traits::bounds::Bounded\">Bounded</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(S, T)</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html\" title=\"trait num_traits::bounds::Bounded\">Bounded</a>,\n    T: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html\" title=\"trait num_traits::bounds::Bounded\">Bounded</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/bounds.rs.html#116\">source</a><a href=\"#method.min_value\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html#tymethod.min_value\" class=\"fn\">min_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(S, T)</a></h4></section></summary><div class='docblock'>Returns the smallest finite number this type can represent</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/bounds.rs.html#116\">source</a><a href=\"#method.max_value\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html#tymethod.max_value\" class=\"fn\">max_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(S, T)</a></h4></section></summary><div class='docblock'>Returns the largest finite number this type can represent</div></details></div></details>","Bounded","mcaptcha::static_assets::static_files::assets::Img"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zeroize-for-(A,+B)\" class=\"impl\"><a href=\"#impl-Zeroize-for-(A,+B)\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, B&gt; Zeroize for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    A: Zeroize,\n    B: Zeroize,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroize\" class=\"method trait-impl\"><a href=\"#method.zeroize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">zeroize</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Zero out this object from memory using Rust intrinsics which ensure the\nzeroization operation is not โoptimized awayโ by the compiler.</div></details></div></details>","Zeroize","mcaptcha::static_assets::static_files::assets::Img"],["<section id=\"impl-ZeroizeOnDrop-for-(A,+B)\" class=\"impl\"><a href=\"#impl-ZeroizeOnDrop-for-(A,+B)\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, B&gt; ZeroizeOnDrop for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    A: ZeroizeOnDrop,\n    B: ZeroizeOnDrop,</div></h3></section>","ZeroizeOnDrop","mcaptcha::static_assets::static_files::assets::Img"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PgHasArrayType-for-(T1,+T2)\" class=\"impl\"><a href=\"#impl-PgHasArrayType-for-(T1,+T2)\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T1, T2&gt; PgHasArrayType for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(T1, T2)</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.array_type_info\" class=\"method trait-impl\"><a href=\"#method.array_type_info\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">array_type_info</a>() -&gt; PgTypeInfo</h4></section><section id=\"method.array_compatible\" class=\"method trait-impl\"><a href=\"#method.array_compatible\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">array_compatible</a>(ty: &amp;PgTypeInfo) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a></h4></section></div></details>","PgHasArrayType","mcaptcha::static_assets::static_files::assets::Img"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Type%3CPostgres%3E-for-(T1,+T2)\" class=\"impl\"><a href=\"#impl-Type%3CPostgres%3E-for-(T1,+T2)\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T1, T2&gt; Type&lt;Postgres&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(T1, T2)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a href=\"#method.type_info\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">type_info</a>() -&gt; PgTypeInfo</h4></section></summary><div class='docblock'>Returns the canonical SQL type for this Rust type. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.compatible\" class=\"method trait-impl\"><a href=\"#method.compatible\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">compatible</a>(ty: &amp;&lt;DB as Database&gt;::TypeInfo) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Determines if this Rust type is compatible with the given SQL type. <a>Read more</a></div></details></div></details>","Type<Postgres>","mcaptcha::static_assets::static_files::assets::Img"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode%3C'r,+Postgres%3E-for-(T1,+T2)\" class=\"impl\"><a href=\"#impl-Decode%3C'r,+Postgres%3E-for-(T1,+T2)\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'r, T1, T2&gt; Decode&lt;'r, Postgres&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(T1, T2)</a><div class=\"where\">where\n    T1: 'r + Type&lt;Postgres&gt; + for&lt;'a&gt; Decode&lt;'a, Postgres&gt;,\n    T2: 'r + Type&lt;Postgres&gt; + for&lt;'a&gt; Decode&lt;'a, Postgres&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>(\n    value: PgValueRef&lt;'r&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(T1, T2)</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt;&gt;</h4></section></summary><div class='docblock'>Decode a new value of this type using a raw value from the database.</div></details></div></details>","Decode<'r, Postgres>","mcaptcha::static_assets::static_files::assets::Img"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()